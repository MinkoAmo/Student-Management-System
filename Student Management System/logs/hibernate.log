2025-05-25 03:10:01 DEBUG logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2025-05-25 03:10:01 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2025-05-25 03:10:01 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2025-05-25 03:10:01 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-05-25 03:10:01 INFO  Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-05-25 03:10:01 DEBUG Environment - HHH000206: hibernate.properties not found
2025-05-25 03:10:01 DEBUG LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2025-05-25 03:10:01 DEBUG LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2025-05-25 03:10:01 DEBUG JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2025-05-25 03:10:02 DEBUG Configuration - Building session factory using internal StandardServiceRegistryBuilder
2025-05-25 03:10:02 DEBUG ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2025-05-25 03:10:02 DEBUG Configuration - Building session factory using provided StandardServiceRegistry
2025-05-25 03:10:02 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-05-25 03:10:02 DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2025-05-25 03:10:02 INFO  Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@222eb8aa
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@222eb8aa
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@222eb8aa
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@25bfcafd
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@71454b9d
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@39fcbef6
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@49c6c24f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@49c6c24f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@49c6c24f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5d5f10b2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5d5f10b2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d5f10b2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63a270c9
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63a270c9
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63a270c9
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@73a2e526
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@73a2e526
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@73a2e526
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@69653e16
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@69653e16
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@69653e16
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@604c5de8
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@604c5de8
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@604c5de8
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@584f54e6
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@584f54e6
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@584f54e6
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5ef6ae06
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5ef6ae06
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@604f2bd2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@604f2bd2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@366ac49b
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@366ac49b
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@2cc44ad
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@63dd899
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@34cdeda2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34cdeda2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4b41e4dd
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4b41e4dd
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@17a1e4ca
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@17a1e4ca
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5669c5fb
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5669c5fb
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@112f364d
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@112f364d
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@542e560f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@542e560f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35d08e6c
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35d08e6c
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@59f63e24
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@59f63e24
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@178213b
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@178213b
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5f6722d3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f6722d3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1d470d0
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1d470d0
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ff65192
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ff65192
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ff65192
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@acdb094
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@35a9782c
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@35a9782c
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@35a9782c
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6622fc65
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6b00f608
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4aa83f4f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4aa83f4f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@ebb6851
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@ebb6851
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3a6f2de3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3a6f2de3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@34f7234e
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34f7234e
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1d2bd371
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1d2bd371
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42f8285e
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@424ebba3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@424ebba3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@424ebba3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3d97a632
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3d97a632
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3d97a632
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@fcb4004
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@784c3487
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@61c9c3fd
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@61c9c3fd
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@61c9c3fd
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7e8dcdaa
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7e8dcdaa
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7e8dcdaa
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4cf8b2dc
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4bff64c2
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7f6f61c8
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7f6f61c8
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@ec2cc4
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@c055c54
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c055c54
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@77d2e85
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@77d2e85
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6bb2d00b
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4c5474f5
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2e554a3b
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6955cb39
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6955cb39
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@18b0930f
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6b7906b3
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a1dd365
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@395b56bb
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@256f8274
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68044f4
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@52d239ba
2025-05-25 03:10:02 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@315f43d5
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-25 03:10:02 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-05-25 03:10:02 WARN  pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2025-05-25 03:10:02 INFO  pooling - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/student_management]
2025-05-25 03:10:02 INFO  pooling - HHH10001001: Connection properties: {password=, user=root}
2025-05-25 03:10:02 INFO  pooling - HHH10001003: Autocommit mode: false
2025-05-25 03:10:02 DEBUG DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2025-05-25 03:10:02 INFO  DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2025-05-25 03:10:02 DEBUG JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.5.5-10.4.32-MariaDB
      major : 5
      minor : 5
2025-05-25 03:10:02 DEBUG JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2025-05-25 03:10:02 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-05-25 03:10:02 INFO  Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-25 03:10:02 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-05-25 03:10:02 DEBUG IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-05-25 03:10:02 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5bf61e67] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2c1dc8e]
2025-05-25 03:10:02 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-05-25 03:10:02 DEBUG AnnotationBinder - Binding entity from annotated class: model.Account
2025-05-25 03:10:02 DEBUG AnnotationBinder - Ignoring implicit (absent) DiscriminatorColumn
2025-05-25 03:10:02 DEBUG EntityBinder - Import with entity name Account
2025-05-25 03:10:02 DEBUG EntityBinder - Bind entity model.Account on table account
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=account_id, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:10:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for id
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property id
2025-05-25 03:10:02 DEBUG BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(account_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, uuid2, ...)
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=password, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:password]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for password
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property password
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=role, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:role]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for role
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property role
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=status, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:status]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for status
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property status
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=username, insertable=true, updatable=true, unique=true}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:username]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for username
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property username
2025-05-25 03:10:02 DEBUG AnnotationBinder - Binding entity from annotated class: model.Admin
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='admin_id', referencedColumn='null', mappedBy='null'}
2025-05-25 03:10:02 DEBUG EntityBinder - Import with entity name Admin
2025-05-25 03:10:02 DEBUG EntityBinder - Bind entity model.Admin on table admin
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=admin_position, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property adPos with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:adPos]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for adPos
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property adPos
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=admin_code, insertable=true, updatable=true, unique=true}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property code with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:code]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for code
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property code
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property createDate with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:createDate]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for createDate
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property createDate
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=email, insertable=true, updatable=true, unique=true}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:email]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for email
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property email
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:fullName]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for fullName
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property fullName
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=last_login_time, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property lastLoginTime with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:lastLoginTime]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for lastLoginTime
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property lastLoginTime
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:phoneNumber]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for phoneNumber
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property phoneNumber
2025-05-25 03:10:02 DEBUG AnnotationBinder - Binding entity from annotated class: model.Teacher
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='teacher_id', referencedColumn='null', mappedBy='null'}
2025-05-25 03:10:02 DEBUG EntityBinder - Import with entity name Teacher
2025-05-25 03:10:02 DEBUG EntityBinder - Bind entity model.Teacher on table teacher
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=academic_title, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property academicTitle with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:academicTitle]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for academicTitle
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property academicTitle
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=address, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property address with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:address]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for address
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property address
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=teacher_code, insertable=true, updatable=true, unique=true}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property code with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:code]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for code
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property code
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=department, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property dept with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:dept]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for dept
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property dept
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property dob with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:dob]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for dob
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property dob
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=email, insertable=true, updatable=true, unique=true}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:email]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for email
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property email
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:fullName]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for fullName
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property fullName
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=gender, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property gender with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:gender]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for gender
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property gender
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:phoneNumber]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for phoneNumber
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property phoneNumber
2025-05-25 03:10:02 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=specialization, insertable=true, updatable=true, unique=false}
2025-05-25 03:10:02 DEBUG PropertyBinder - MetadataSourceProcessor property specialization with lazy=false
2025-05-25 03:10:02 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:specialization]
2025-05-25 03:10:02 DEBUG SimpleValueBinder - building SimpleValue for specialization
2025-05-25 03:10:02 DEBUG PropertyBinder - Building property specialization
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for id
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for password
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for role
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for status
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for username
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for adPos
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for code
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for createDate
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for email
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for fullName
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for lastLoginTime
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for phoneNumber
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for academicTitle
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for address
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for code
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for dept
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for dob
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for email
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for fullName
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for gender
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for phoneNumber
2025-05-25 03:10:02 DEBUG SimpleValueBinder - Starting fillSimpleValue for specialization
2025-05-25 03:10:02 DEBUG PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2025-05-25 03:10:02 DEBUG PrimaryKey - Forcing column [admin_id] to be non-null as it is part of the primary key for table [admin]
2025-05-25 03:10:02 DEBUG PrimaryKey - Forcing column [teacher_id] to be non-null as it is part of the primary key for table [teacher]
2025-05-25 03:10:02 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:10:02 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:10:02 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:10:02 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:10:02 DEBUG SessionFactoryImpl - Building session factory
2025-05-25 03:10:02 DEBUG Settings - SessionFactory name : null
2025-05-25 03:10:02 DEBUG Settings - Automatic flush during beforeCompletion(): enabled
2025-05-25 03:10:02 DEBUG Settings - Automatic session close at end of transaction: disabled
2025-05-25 03:10:02 DEBUG Settings - Statistics: disabled
2025-05-25 03:10:02 DEBUG Settings - Deleted entity synthetic identifier rollback: disabled
2025-05-25 03:10:02 DEBUG Settings - Default entity-mode: pojo
2025-05-25 03:10:02 DEBUG Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2025-05-25 03:10:02 DEBUG Settings - Allow initialization of lazy state outside session : disabled
2025-05-25 03:10:02 DEBUG Settings - Using BatchFetchStyle : LEGACY
2025-05-25 03:10:02 DEBUG Settings - Default batch fetch size: -1
2025-05-25 03:10:02 DEBUG Settings - Maximum outer join fetch depth: 2
2025-05-25 03:10:02 DEBUG Settings - Default null ordering: NONE
2025-05-25 03:10:02 DEBUG Settings - Order SQL updates by primary key: disabled
2025-05-25 03:10:02 DEBUG Settings - Order SQL inserts for batching: disabled
2025-05-25 03:10:02 DEBUG Settings - multi-tenancy strategy : NONE
2025-05-25 03:10:02 DEBUG Settings - JTA Track by Thread: enabled
2025-05-25 03:10:02 DEBUG Settings - Query language substitutions: {}
2025-05-25 03:10:02 DEBUG Settings - Named query checking : enabled
2025-05-25 03:10:02 DEBUG Settings - Second-level cache: disabled
2025-05-25 03:10:02 DEBUG Settings - Second-level query cache: disabled
2025-05-25 03:10:02 DEBUG Settings - Second-level query cache factory: null
2025-05-25 03:10:02 DEBUG Settings - Second-level cache region prefix: null
2025-05-25 03:10:02 DEBUG Settings - Optimize second-level cache for minimal puts: disabled
2025-05-25 03:10:02 DEBUG Settings - Structured second-level cache entries: disabled
2025-05-25 03:10:02 DEBUG Settings - Second-level cache direct-reference entries: disabled
2025-05-25 03:10:02 DEBUG Settings - Automatic eviction of collection cache: disabled
2025-05-25 03:10:02 DEBUG Settings - JDBC batch size: 15
2025-05-25 03:10:02 DEBUG Settings - JDBC batch updates for versioned data: enabled
2025-05-25 03:10:02 DEBUG Settings - Scrollable result sets: enabled
2025-05-25 03:10:02 DEBUG Settings - Wrap result sets: disabled
2025-05-25 03:10:02 DEBUG Settings - JDBC3 getGeneratedKeys(): enabled
2025-05-25 03:10:02 DEBUG Settings - JDBC result set fetch size: null
2025-05-25 03:10:02 DEBUG Settings - Connection release mode: AFTER_TRANSACTION
2025-05-25 03:10:02 DEBUG Settings - Generate SQL with comments: disabled
2025-05-25 03:10:02 DEBUG Settings - JPA compliance - query : disabled
2025-05-25 03:10:02 DEBUG Settings - JPA compliance - closed-handling : disabled
2025-05-25 03:10:02 DEBUG Settings - JPA compliance - lists : disabled
2025-05-25 03:10:02 DEBUG Settings - JPA compliance - transactions : disabled
2025-05-25 03:10:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:10:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:10:02 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:10:02 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:10:02 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:10:02 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:10:02 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-05-25 03:10:02 DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=D:\CODE\Project\Student Management System\Student Management System\target\classes;C:\Users\minko\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\minko\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\minko\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\minko\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\minko\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\minko\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\minko\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\minko\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\minko\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\minko\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\minko\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.3\jaxb-runtime-2.3.3.jar;C:\Users\minko\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\minko\.m2\repository\org\glassfish\jaxb\txw2\2.3.3\txw2-2.3.3.jar;C:\Users\minko\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.11\istack-commons-runtime-3.0.11.jar;C:\Users\minko\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\minko\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\minko\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\minko\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\minko\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.7.Final\hibernate-validator-6.1.7.Final.jar;C:\Users\minko\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\minko\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\minko\.m2\repository\org\glassfish\javax.el\3.0.0\javax.el-3.0.0.jar;C:\Users\minko\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=Asia/Saigon, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre\bin, sun.java.command=com.itdepartment.studentmanagermentsystem.nguyenlehoang.App, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\minko, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+7-LTS, user.name=minko, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/student_management, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-21.0.6+7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\minko\AppData\Local\Temp\, java.version=21.0.6, user.dir=D:\CODE\Project\Student Management System\Student Management System, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1d96d872, native.encoding=Cp1252, java.library.path=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/minko/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin/server;C:/Users/minko/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\Java\jdk-21\bin;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\minko\AppData\Local\Microsoft\WindowsApps;C:\Users\minko\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\minko\.dotnet\tools;C:\WINDOWS\system32;;., stderr.encoding=UTF-8, java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+7-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2025-05-25 03:10:03 INFO  Version - HV000001: Hibernate Validator 6.1.7.Final
2025-05-25 03:10:03 DEBUG ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-25 03:10:03 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-05-25 03:10:03 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-25 03:10:03 DEBUG ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-25 03:10:03 DEBUG TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-25 03:10:03 DEBUG TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-25 03:10:03 DEBUG ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:10:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:10:03 DEBUG JaccIntegrator - Skipping JACC integration as it was not enabled
2025-05-25 03:10:03 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Department
2025-05-25 03:10:03 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Gender
2025-05-25 03:10:03 DEBUG EnumType - Using NAMED-based conversion for Enum enums.AdminPosition
2025-05-25 03:10:03 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Role
2025-05-25 03:10:03 DEBUG EnumType - Using NAMED-based conversion for Enum enums.AccountStatus
2025-05-25 03:10:03 DEBUG SessionFactoryImpl - Instantiated session factory
2025-05-25 03:10:03 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5bf61e67] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@146dcfe6]
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:10:03 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:10:03 DEBUG AbstractEntityPersister - Static SQL for entity: model.Teacher
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Snapshot select: select teacher_.teacher_id, teacher_1_.password as password2_0_, teacher_1_.role as role3_0_, teacher_1_.status as status4_0_, teacher_1_.username as username5_0_, teacher_.academic_title as academic1_2_, teacher_.address as address2_2_, teacher_.teacher_code as teacher_3_2_, teacher_.department as departme4_2_, teacher_.dob as dob5_2_, teacher_.email as email6_2_, teacher_.full_name as full_nam7_2_, teacher_.gender as gender8_2_, teacher_.phone_number as phone_nu9_2_, teacher_.specialization as special10_2_ from teacher teacher_ inner join account teacher_1_ on teacher_.teacher_id=teacher_1_.account_id where teacher_.teacher_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Insert 1: insert into teacher (academic_title, address, teacher_code, department, dob, email, full_name, gender, phone_number, specialization, teacher_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Update 1: update teacher set academic_title=?, address=?, teacher_code=?, department=?, dob=?, email=?, full_name=?, gender=?, phone_number=?, specialization=? where teacher_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Delete 1: delete from teacher where teacher_id=?
2025-05-25 03:10:03 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b61edb9]
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : academicTitle
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : address
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : dept
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : dob
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : gender
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : specialization
2025-05-25 03:10:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:10:03 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:10:03 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Teacher)
    - Returns
       - EntityReturnImpl(entity=model.Teacher, querySpaceUid=<gen:0>, path=model.Teacher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:10:03 DEBUG EntityLoader - Static select for entity model.Teacher [NONE]: select teacher0_.teacher_id as account_1_0_0_, teacher0_1_.password as password2_0_0_, teacher0_1_.role as role3_0_0_, teacher0_1_.status as status4_0_0_, teacher0_1_.username as username5_0_0_, teacher0_.academic_title as academic1_2_0_, teacher0_.address as address2_2_0_, teacher0_.teacher_code as teacher_3_2_0_, teacher0_.department as departme4_2_0_, teacher0_.dob as dob5_2_0_, teacher0_.email as email6_2_0_, teacher0_.full_name as full_nam7_2_0_, teacher0_.gender as gender8_2_0_, teacher0_.phone_number as phone_nu9_2_0_, teacher0_.specialization as special10_2_0_ from teacher teacher0_ inner join account teacher0_1_ on teacher0_.teacher_id=teacher0_1_.account_id where teacher0_.teacher_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister - Static SQL for entity: model.Admin
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Snapshot select: select admin_.admin_id, admin_1_.password as password2_0_, admin_1_.role as role3_0_, admin_1_.status as status4_0_, admin_1_.username as username5_0_, admin_.admin_position as admin_po1_1_, admin_.admin_code as admin_co2_1_, admin_.create_date as create_d3_1_, admin_.email as email4_1_, admin_.fullName as fullname5_1_, admin_.last_login_time as last_log6_1_, admin_.phone_number as phone_nu7_1_ from admin admin_ inner join account admin_1_ on admin_.admin_id=admin_1_.account_id where admin_.admin_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Insert 1: insert into admin (admin_position, admin_code, create_date, email, fullName, last_login_time, phone_number, admin_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Update 1: update admin set admin_position=?, admin_code=?, create_date=?, email=?, fullName=?, last_login_time=?, phone_number=? where admin_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Delete 1: delete from admin where admin_id=?
2025-05-25 03:10:03 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a146b11]
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : adPos
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : createDate
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : lastLoginTime
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:10:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:10:03 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:10:03 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Admin)
    - Returns
       - EntityReturnImpl(entity=model.Admin, querySpaceUid=<gen:0>, path=model.Admin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Admin)
          - SQL table alias mapping - admin0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:10:03 DEBUG EntityLoader - Static select for entity model.Admin [NONE]: select admin0_.admin_id as account_1_0_0_, admin0_1_.password as password2_0_0_, admin0_1_.role as role3_0_0_, admin0_1_.status as status4_0_0_, admin0_1_.username as username5_0_0_, admin0_.admin_position as admin_po1_1_0_, admin0_.admin_code as admin_co2_1_0_, admin0_.create_date as create_d3_1_0_, admin0_.email as email4_1_0_, admin0_.fullName as fullname5_1_0_, admin0_.last_login_time as last_log6_1_0_, admin0_.phone_number as phone_nu7_1_0_ from admin admin0_ inner join account admin0_1_ on admin0_.admin_id=admin0_1_.account_id where admin0_.admin_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister - Static SQL for entity: model.Account
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Snapshot select: select account_.account_id, account_.password as password2_0_, account_.role as role3_0_, account_.status as status4_0_, account_.username as username5_0_ from account account_ where account_.account_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:10:03 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:10:03 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ed5a1b0]
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : academicTitle
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : address
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : dept
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : dob
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : gender
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : specialization
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : adPos
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : createDate
2025-05-25 03:10:03 DEBUG MetamodelGraphWalker - Visiting attribute path : lastLoginTime
2025-05-25 03:10:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:10:03 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:10:03 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:10:03 DEBUG EntityLoader - Static select for entity model.Account [NONE]: select account0_.account_id as account_1_0_0_, account0_.password as password2_0_0_, account0_.role as role3_0_0_, account0_.status as status4_0_0_, account0_.username as username5_0_0_, account0_1_.admin_position as admin_po1_1_0_, account0_1_.admin_code as admin_co2_1_0_, account0_1_.create_date as create_d3_1_0_, account0_1_.email as email4_1_0_, account0_1_.fullName as fullname5_1_0_, account0_1_.last_login_time as last_log6_1_0_, account0_1_.phone_number as phone_nu7_1_0_, account0_2_.academic_title as academic1_2_0_, account0_2_.address as address2_2_0_, account0_2_.teacher_code as teacher_3_2_0_, account0_2_.department as departme4_2_0_, account0_2_.dob as dob5_2_0_, account0_2_.email as email6_2_0_, account0_2_.full_name as full_nam7_2_0_, account0_2_.gender as gender8_2_0_, account0_2_.phone_number as phone_nu9_2_0_, account0_2_.specialization as special10_2_0_, case when account0_1_.admin_id is not null then 1 when account0_2_.teacher_id is not null then 2 when account0_.account_id is not null then 0 end as clazz_0_ from account account0_ left outer join admin account0_1_ on account0_.account_id=account0_1_.admin_id left outer join teacher account0_2_ on account0_.account_id=account0_2_.teacher_id where account0_.account_id=?
2025-05-25 03:10:03 INFO  access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7ba93755] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-05-25 03:10:03 DEBUG Table - No alter strings for table : account
2025-05-25 03:10:03 DEBUG Table - No alter strings for table : admin
2025-05-25 03:10:03 DEBUG Table - No alter strings for table : teacher
2025-05-25 03:10:03 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-05-25 03:10:03 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-05-25 03:10:03 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-25 03:10:03 INFO  JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-25 03:10:03 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:10:03 DEBUG QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4a1a256d
2025-05-25 03:10:03 DEBUG NamedQueryRepository - Checking 0 named HQL queries
2025-05-25 03:10:03 DEBUG NamedQueryRepository - Checking 0 named SQL queries
2025-05-25 03:10:03 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@79980d8d
2025-05-25 03:10:03 DEBUG SessionFactoryRegistry - Registering SessionFactory: c6187530-821a-4b1f-b514-3fa00f8e0a1c (<unnamed>)
2025-05-25 03:10:03 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-05-25 03:10:03 DEBUG ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-25 03:10:03 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-05-25 03:10:03 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-25 03:10:03 DEBUG ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-25 03:10:03 DEBUG TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-25 03:10:03 DEBUG TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-25 03:10:03 DEBUG ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-25 03:10:03 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-25 03:10:03 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-05-25 03:10:03 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-25 03:10:03 DEBUG TransactionImpl - begin
2025-05-25 03:10:03 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Teacher e where e.email = :fieldValue
2025-05-25 03:10:03 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:03 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Teacher'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:10:04 DEBUG FromElement - FromClause{level=1} : model.Teacher (e) -> teacher0_
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:10:04 DEBUG DotNode - getDataType() : email -> org.hibernate.type.StringType@366ac49b
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e.email -> teacher0_.email
2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:10:04 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count teacher0_.teacher_id ) ) ( FromClause{level=1} teacher teacher0_ ) ( where ( = ( teacher0_.email teacher0_.teacher_id email ) ? ) ) )
2025-05-25 03:10:04 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Teacher)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Teacher)
          | path: e.email
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Teacher)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

2025-05-25 03:10:04 DEBUG JoinProcessor - Using FROM fragment [teacher teacher0_]
2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teacher,account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[teacher0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teacher teacher0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=teacher,tableAlias=teacher0_,origin=null,columns={,className=model.Teacher}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'teacher0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=e.email,tableAlias=teacher0_,className=model.Teacher,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@366ac49b}

2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Teacher e where e.email = :fieldValue
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - SQL: select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:10:04 DEBUG Loader - Result set row: 0
2025-05-25 03:10:04 DEBUG Loader - Result row: 
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Teacher e where e.code = :fieldValue
2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Teacher'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:10:04 DEBUG FromElement - FromClause{level=1} : model.Teacher (e) -> teacher0_
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:10:04 DEBUG DotNode - getDataType() : code -> org.hibernate.type.StringType@366ac49b
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e.code -> teacher0_.teacher_code
2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:10:04 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count teacher0_.teacher_id ) ) ( FromClause{level=1} teacher teacher0_ ) ( where ( = ( teacher0_.teacher_code teacher0_.teacher_id code ) ? ) ) )
2025-05-25 03:10:04 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Teacher)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Teacher)
          | path: e.code
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Teacher)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: code
          \-ParameterNode

2025-05-25 03:10:04 DEBUG JoinProcessor - Using FROM fragment [teacher teacher0_]
2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teacher,account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[teacher0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teacher teacher0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=teacher,tableAlias=teacher0_,origin=null,columns={,className=model.Teacher}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'teacher0_.teacher_code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=e.code,tableAlias=teacher0_,className=model.Teacher,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
          |  \-[IDENT] IdentNode: 'code' {originalText=code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@366ac49b}

2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Teacher e where e.code = :fieldValue
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - SQL: select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Teacher001]
2025-05-25 03:10:04 DEBUG Loader - Result set row: 0
2025-05-25 03:10:04 DEBUG Loader - Result row: 
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Account e where e.username = :fieldValue
2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:10:04 DEBUG FromElement - FromClause{level=1} : model.Account (e) -> account0_
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e -> account0_.account_id
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e -> account0_.account_id
2025-05-25 03:10:04 DEBUG DotNode - getDataType() : username -> org.hibernate.type.StringType@366ac49b
2025-05-25 03:10:04 DEBUG FromReferenceNode - Resolved : e.username -> account0_.username
2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:10:04 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count account0_.account_id ) ) ( FromClause{level=1} account account0_ ) ( where ( = ( account0_.username account0_.account_id username ) ? ) ) )
2025-05-25 03:10:04 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Account)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Account)
          | path: e.username
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Account)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

2025-05-25 03:10:04 DEBUG JoinProcessor - Using FROM fragment [account account0_]
2025-05-25 03:10:04 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'account0_.account_id' {alias=e, className=model.Account, tableAlias=account0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=account,tableAlias=account0_,origin=null,columns={,className=model.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=e.username,tableAlias=account0_,className=model.Account,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'account0_.account_id' {alias=e, className=model.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@366ac49b}

2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Account e where e.username = :fieldValue
2025-05-25 03:10:04 DEBUG QueryTranslatorImpl - SQL: select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:10:04 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:10:04 DEBUG SQL - select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [minkoamo]
2025-05-25 03:10:04 DEBUG Loader - Result set row: 0
2025-05-25 03:10:04 DEBUG Loader - Result row: 
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG AbstractSaveEventListener - Generated identifier: 3c9f97c2-7ea7-4955-b9ae-b665dd2b02d8, using strategy: org.hibernate.id.UUIDGenerator
2025-05-25 03:10:04 DEBUG TransactionImpl - committing
2025-05-25 03:10:04 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-05-25 03:10:04 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-05-25 03:10:04 DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2025-05-25 03:10:04 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-05-25 03:10:04 DEBUG EntityPrinter - Listing entities:
2025-05-25 03:10:04 DEBUG EntityPrinter - model.Teacher{role=TEACHER, address=null, code=Teacher001, gender=null, fullName=Nguyen Le Hoang, dept=null, academicTitle=null, password=Nguyenlehoang1@, phoneNumber=null, dob=null, specialization=null, id=3c9f97c2-7ea7-4955-b9ae-b665dd2b02d8, email=nguyenlehoang1@gentherm.com, status=ACTIVE, username=minkoamo}
2025-05-25 03:10:04 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:10:04 DEBUG Loader - Result set row: 0
2025-05-25 03:10:04 DEBUG Loader - Result row: 
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Teacher001]
2025-05-25 03:10:04 DEBUG Loader - Result set row: 0
2025-05-25 03:10:04 DEBUG Loader - Result row: 
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG SQL - select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [minkoamo]
2025-05-25 03:10:04 DEBUG Loader - Result set row: 0
2025-05-25 03:10:04 DEBUG Loader - Result row: 
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG SQL - insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Nguyenlehoang1@]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [2] as [VARCHAR] - [TEACHER]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [3] as [VARCHAR] - [ACTIVE]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [4] as [VARCHAR] - [minkoamo]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [5] as [VARCHAR] - [3c9f97c2-7ea7-4955-b9ae-b665dd2b02d8]
2025-05-25 03:10:04 DEBUG SQL - insert into teacher (academic_title, address, teacher_code, department, dob, email, full_name, gender, phone_number, specialization, teacher_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [null]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [3] as [VARCHAR] - [Teacher001]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [4] as [VARCHAR] - [null]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [5] as [DATE] - [null]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [6] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [7] as [VARCHAR] - [Nguyen Le Hoang]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [10] as [VARCHAR] - [null]
2025-05-25 03:10:04 TRACE BasicBinder - binding parameter [11] as [VARCHAR] - [3c9f97c2-7ea7-4955-b9ae-b665dd2b02d8]
2025-05-25 03:10:04 DEBUG SqlExceptionHelper - could not execute statement [n/a]
java.sql.SQLException: Field 'account_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:986)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:10:04 WARN  SqlExceptionHelper - SQL Error: 1364, SQLState: HY000
2025-05-25 03:10:04 ERROR SqlExceptionHelper - Field 'account_id' doesn't have a default value
2025-05-25 03:10:04 INFO  AbstractBatchImpl - HHH000010: On release of batch it still contained JDBC statements
2025-05-25 03:10:04 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1411)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:10:04 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:10:04 DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2025-05-25 03:10:04 DEBUG SessionFactoryImpl - HHH000031: Closing
2025-05-25 03:10:04 DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@560271a1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@146dcfe6]
2025-05-25 03:10:04 DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-05-25 03:10:04 INFO  pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/student_management]
2025-05-25 03:10:04 DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-05-25 03:18:20 DEBUG logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2025-05-25 03:18:20 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2025-05-25 03:18:20 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2025-05-25 03:18:20 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-05-25 03:18:20 INFO  Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-05-25 03:18:20 DEBUG Environment - HHH000206: hibernate.properties not found
2025-05-25 03:18:20 DEBUG LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2025-05-25 03:18:20 DEBUG LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2025-05-25 03:18:20 DEBUG JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2025-05-25 03:18:21 DEBUG Configuration - Building session factory using internal StandardServiceRegistryBuilder
2025-05-25 03:18:21 DEBUG ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2025-05-25 03:18:21 DEBUG Configuration - Building session factory using provided StandardServiceRegistry
2025-05-25 03:18:21 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-05-25 03:18:21 DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2025-05-25 03:18:21 INFO  Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@55dfcc6
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@55dfcc6
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@55dfcc6
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7203c7ff
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2a76840c
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@623e088f
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67304a40
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67304a40
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67304a40
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5023bb8b
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5023bb8b
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5023bb8b
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5cde6747
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5cde6747
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5cde6747
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2d96543c
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2d96543c
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d96543c
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b8d96d9
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b8d96d9
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b8d96d9
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fe1ce85
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fe1ce85
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fe1ce85
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52851b44
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52851b44
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52851b44
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23aa363a
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23aa363a
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e8ce150
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e8ce150
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@363042d7
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@363042d7
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@62e20a76
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@663411de
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@9ef8eb7
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@9ef8eb7
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@232a7d73
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@232a7d73
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@301ec38b
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@301ec38b
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@56113384
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@56113384
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@362045c0
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@362045c0
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@241e8ea6
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@241e8ea6
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3016fd5e
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3016fd5e
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@42463763
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@42463763
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@613a8ee1
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@613a8ee1
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@39a8312f
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@39a8312f
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@31000e60
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31000e60
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@fc258b1
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@fc258b1
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@fc258b1
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57ea113a
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@50ecde95
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50ecde95
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50ecde95
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d3957fe
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e1fa5b1
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4fce136b
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fce136b
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3300f4fd
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3300f4fd
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7cbc3762
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7cbc3762
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f48b3d2
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f48b3d2
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c550889
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c550889
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18bc345
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@340da44c
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@340da44c
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@340da44c
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77a7cf58
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77a7cf58
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77a7cf58
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@293a5f75
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2dd29a59
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2d36e77e
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d36e77e
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2d36e77e
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8c11eee
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8c11eee
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8c11eee
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5c08c46a
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4218500f
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6f2cfcc2
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f2cfcc2
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4097cac
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3d9f6567
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d9f6567
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4233e892
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4233e892
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@555cf22
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@319bc845
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@e84a8e1
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@aafcffa
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@aafcffa
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f7b97da
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18b0930f
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b7906b3
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a1dd365
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@395b56bb
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@256f8274
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68044f4
2025-05-25 03:18:21 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52d239ba
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-25 03:18:21 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-05-25 03:18:21 WARN  pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2025-05-25 03:18:21 INFO  pooling - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/student_management]
2025-05-25 03:18:21 INFO  pooling - HHH10001001: Connection properties: {password=, user=root}
2025-05-25 03:18:21 INFO  pooling - HHH10001003: Autocommit mode: false
2025-05-25 03:18:21 DEBUG DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2025-05-25 03:18:21 INFO  DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2025-05-25 03:18:21 DEBUG JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.5.5-10.4.32-MariaDB
      major : 5
      minor : 5
2025-05-25 03:18:21 DEBUG JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2025-05-25 03:18:21 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-05-25 03:18:21 INFO  Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-25 03:18:21 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-05-25 03:18:21 DEBUG IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-05-25 03:18:21 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c1dc8e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b273a59]
2025-05-25 03:18:21 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-05-25 03:18:21 DEBUG AnnotationBinder - Binding entity from annotated class: model.Account
2025-05-25 03:18:21 DEBUG AnnotationBinder - Ignoring implicit (absent) DiscriminatorColumn
2025-05-25 03:18:21 DEBUG EntityBinder - Import with entity name Account
2025-05-25 03:18:21 DEBUG EntityBinder - Bind entity model.Account on table account
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=account_id, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:18:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for id
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property id
2025-05-25 03:18:21 DEBUG BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(account_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, uuid2, ...)
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=password, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:password]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for password
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property password
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=role, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:role]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for role
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property role
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=status, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:status]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for status
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property status
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=username, insertable=true, updatable=true, unique=true}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:username]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for username
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property username
2025-05-25 03:18:21 DEBUG AnnotationBinder - Binding entity from annotated class: model.Admin
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='admin_id', referencedColumn='null', mappedBy='null'}
2025-05-25 03:18:21 DEBUG EntityBinder - Import with entity name Admin
2025-05-25 03:18:21 DEBUG EntityBinder - Bind entity model.Admin on table admin
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=admin_position, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property adPos with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:adPos]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for adPos
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property adPos
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=admin_code, insertable=true, updatable=true, unique=true}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property code with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:code]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for code
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property code
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property createDate with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:createDate]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for createDate
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property createDate
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=email, insertable=true, updatable=true, unique=true}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:email]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for email
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property email
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:fullName]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for fullName
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property fullName
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=last_login_time, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property lastLoginTime with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:lastLoginTime]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for lastLoginTime
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property lastLoginTime
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:phoneNumber]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for phoneNumber
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property phoneNumber
2025-05-25 03:18:21 DEBUG AnnotationBinder - Binding entity from annotated class: model.Teacher
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='account_id', referencedColumn='null', mappedBy='null'}
2025-05-25 03:18:21 DEBUG EntityBinder - Import with entity name Teacher
2025-05-25 03:18:21 DEBUG EntityBinder - Bind entity model.Teacher on table teacher
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=academic_title, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property academicTitle with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:academicTitle]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for academicTitle
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property academicTitle
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=address, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property address with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:address]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for address
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property address
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=teacher_code, insertable=true, updatable=true, unique=true}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property code with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:code]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for code
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property code
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=department, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property dept with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:dept]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for dept
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property dept
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property dob with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:dob]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for dob
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property dob
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=email, insertable=true, updatable=true, unique=true}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:email]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for email
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property email
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:fullName]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for fullName
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property fullName
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=gender, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property gender with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:gender]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for gender
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property gender
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:phoneNumber]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for phoneNumber
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property phoneNumber
2025-05-25 03:18:21 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=specialization, insertable=true, updatable=true, unique=false}
2025-05-25 03:18:21 DEBUG PropertyBinder - MetadataSourceProcessor property specialization with lazy=false
2025-05-25 03:18:21 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:specialization]
2025-05-25 03:18:21 DEBUG SimpleValueBinder - building SimpleValue for specialization
2025-05-25 03:18:21 DEBUG PropertyBinder - Building property specialization
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for id
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for password
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for role
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for status
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for username
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for adPos
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for code
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for createDate
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for email
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for fullName
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for lastLoginTime
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for phoneNumber
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for academicTitle
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for address
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for code
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for dept
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for dob
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for email
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for fullName
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for gender
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for phoneNumber
2025-05-25 03:18:21 DEBUG SimpleValueBinder - Starting fillSimpleValue for specialization
2025-05-25 03:18:21 DEBUG PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2025-05-25 03:18:21 DEBUG PrimaryKey - Forcing column [admin_id] to be non-null as it is part of the primary key for table [admin]
2025-05-25 03:18:21 DEBUG PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [teacher]
2025-05-25 03:18:21 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:18:21 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:18:21 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:18:21 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:18:21 DEBUG SessionFactoryImpl - Building session factory
2025-05-25 03:18:21 DEBUG Settings - SessionFactory name : null
2025-05-25 03:18:21 DEBUG Settings - Automatic flush during beforeCompletion(): enabled
2025-05-25 03:18:21 DEBUG Settings - Automatic session close at end of transaction: disabled
2025-05-25 03:18:21 DEBUG Settings - Statistics: disabled
2025-05-25 03:18:21 DEBUG Settings - Deleted entity synthetic identifier rollback: disabled
2025-05-25 03:18:21 DEBUG Settings - Default entity-mode: pojo
2025-05-25 03:18:21 DEBUG Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2025-05-25 03:18:21 DEBUG Settings - Allow initialization of lazy state outside session : disabled
2025-05-25 03:18:21 DEBUG Settings - Using BatchFetchStyle : LEGACY
2025-05-25 03:18:21 DEBUG Settings - Default batch fetch size: -1
2025-05-25 03:18:21 DEBUG Settings - Maximum outer join fetch depth: 2
2025-05-25 03:18:21 DEBUG Settings - Default null ordering: NONE
2025-05-25 03:18:21 DEBUG Settings - Order SQL updates by primary key: disabled
2025-05-25 03:18:21 DEBUG Settings - Order SQL inserts for batching: disabled
2025-05-25 03:18:21 DEBUG Settings - multi-tenancy strategy : NONE
2025-05-25 03:18:21 DEBUG Settings - JTA Track by Thread: enabled
2025-05-25 03:18:21 DEBUG Settings - Query language substitutions: {}
2025-05-25 03:18:21 DEBUG Settings - Named query checking : enabled
2025-05-25 03:18:21 DEBUG Settings - Second-level cache: disabled
2025-05-25 03:18:21 DEBUG Settings - Second-level query cache: disabled
2025-05-25 03:18:21 DEBUG Settings - Second-level query cache factory: null
2025-05-25 03:18:21 DEBUG Settings - Second-level cache region prefix: null
2025-05-25 03:18:21 DEBUG Settings - Optimize second-level cache for minimal puts: disabled
2025-05-25 03:18:21 DEBUG Settings - Structured second-level cache entries: disabled
2025-05-25 03:18:21 DEBUG Settings - Second-level cache direct-reference entries: disabled
2025-05-25 03:18:21 DEBUG Settings - Automatic eviction of collection cache: disabled
2025-05-25 03:18:21 DEBUG Settings - JDBC batch size: 15
2025-05-25 03:18:21 DEBUG Settings - JDBC batch updates for versioned data: enabled
2025-05-25 03:18:21 DEBUG Settings - Scrollable result sets: enabled
2025-05-25 03:18:21 DEBUG Settings - Wrap result sets: disabled
2025-05-25 03:18:21 DEBUG Settings - JDBC3 getGeneratedKeys(): enabled
2025-05-25 03:18:21 DEBUG Settings - JDBC result set fetch size: null
2025-05-25 03:18:21 DEBUG Settings - Connection release mode: AFTER_TRANSACTION
2025-05-25 03:18:21 DEBUG Settings - Generate SQL with comments: disabled
2025-05-25 03:18:21 DEBUG Settings - JPA compliance - query : disabled
2025-05-25 03:18:21 DEBUG Settings - JPA compliance - closed-handling : disabled
2025-05-25 03:18:21 DEBUG Settings - JPA compliance - lists : disabled
2025-05-25 03:18:21 DEBUG Settings - JPA compliance - transactions : disabled
2025-05-25 03:18:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:18:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:18:21 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:18:21 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:18:21 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:18:21 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:18:21 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-05-25 03:18:21 DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=D:\CODE\Project\Student Management System\Student Management System\target\classes;C:\Users\minko\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\minko\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\minko\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\minko\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\minko\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\minko\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\minko\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\minko\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\minko\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\minko\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\minko\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.3\jaxb-runtime-2.3.3.jar;C:\Users\minko\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\minko\.m2\repository\org\glassfish\jaxb\txw2\2.3.3\txw2-2.3.3.jar;C:\Users\minko\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.11\istack-commons-runtime-3.0.11.jar;C:\Users\minko\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\minko\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\minko\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\minko\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\minko\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.7.Final\hibernate-validator-6.1.7.Final.jar;C:\Users\minko\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\minko\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\minko\.m2\repository\org\glassfish\javax.el\3.0.0\javax.el-3.0.0.jar;C:\Users\minko\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=Asia/Saigon, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre\bin, sun.java.command=com.itdepartment.studentmanagermentsystem.nguyenlehoang.App, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\minko, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+7-LTS, user.name=minko, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/student_management, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-21.0.6+7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\minko\AppData\Local\Temp\, java.version=21.0.6, user.dir=D:\CODE\Project\Student Management System\Student Management System, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5c748168, native.encoding=Cp1252, java.library.path=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/minko/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin/server;C:/Users/minko/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\Java\jdk-21\bin;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\minko\AppData\Local\Microsoft\WindowsApps;C:\Users\minko\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\minko\.dotnet\tools;C:\WINDOWS\system32;;., stderr.encoding=UTF-8, java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+7-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2025-05-25 03:18:22 INFO  Version - HV000001: Hibernate Validator 6.1.7.Final
2025-05-25 03:18:22 DEBUG ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-25 03:18:22 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-05-25 03:18:22 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-25 03:18:22 DEBUG ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-25 03:18:22 DEBUG TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-25 03:18:22 DEBUG TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-25 03:18:22 DEBUG ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:18:22 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:18:22 DEBUG JaccIntegrator - Skipping JACC integration as it was not enabled
2025-05-25 03:18:22 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Department
2025-05-25 03:18:22 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Gender
2025-05-25 03:18:22 DEBUG EnumType - Using NAMED-based conversion for Enum enums.AdminPosition
2025-05-25 03:18:22 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Role
2025-05-25 03:18:22 DEBUG EnumType - Using NAMED-based conversion for Enum enums.AccountStatus
2025-05-25 03:18:22 DEBUG SessionFactoryImpl - Instantiated session factory
2025-05-25 03:18:22 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c1dc8e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22587507]
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:18:22 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:18:22 DEBUG AbstractEntityPersister - Static SQL for entity: model.Teacher
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Snapshot select: select teacher_.account_id, teacher_1_.password as password2_0_, teacher_1_.role as role3_0_, teacher_1_.status as status4_0_, teacher_1_.username as username5_0_, teacher_.academic_title as academic1_2_, teacher_.address as address2_2_, teacher_.teacher_code as teacher_3_2_, teacher_.department as departme4_2_, teacher_.dob as dob5_2_, teacher_.email as email6_2_, teacher_.full_name as full_nam7_2_, teacher_.gender as gender8_2_, teacher_.phone_number as phone_nu9_2_, teacher_.specialization as special10_2_ from teacher teacher_ inner join account teacher_1_ on teacher_.account_id=teacher_1_.account_id where teacher_.account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Insert 1: insert into teacher (academic_title, address, teacher_code, department, dob, email, full_name, gender, phone_number, specialization, account_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Update 1: update teacher set academic_title=?, address=?, teacher_code=?, department=?, dob=?, email=?, full_name=?, gender=?, phone_number=?, specialization=? where account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Delete 1: delete from teacher where account_id=?
2025-05-25 03:18:22 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2abbd0d9]
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : academicTitle
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : address
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : dept
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : dob
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : gender
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : specialization
2025-05-25 03:18:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:18:22 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:18:22 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Teacher)
    - Returns
       - EntityReturnImpl(entity=model.Teacher, querySpaceUid=<gen:0>, path=model.Teacher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:18:22 DEBUG EntityLoader - Static select for entity model.Teacher [NONE]: select teacher0_.account_id as account_1_0_0_, teacher0_1_.password as password2_0_0_, teacher0_1_.role as role3_0_0_, teacher0_1_.status as status4_0_0_, teacher0_1_.username as username5_0_0_, teacher0_.academic_title as academic1_2_0_, teacher0_.address as address2_2_0_, teacher0_.teacher_code as teacher_3_2_0_, teacher0_.department as departme4_2_0_, teacher0_.dob as dob5_2_0_, teacher0_.email as email6_2_0_, teacher0_.full_name as full_nam7_2_0_, teacher0_.gender as gender8_2_0_, teacher0_.phone_number as phone_nu9_2_0_, teacher0_.specialization as special10_2_0_ from teacher teacher0_ inner join account teacher0_1_ on teacher0_.account_id=teacher0_1_.account_id where teacher0_.account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister - Static SQL for entity: model.Admin
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Snapshot select: select admin_.admin_id, admin_1_.password as password2_0_, admin_1_.role as role3_0_, admin_1_.status as status4_0_, admin_1_.username as username5_0_, admin_.admin_position as admin_po1_1_, admin_.admin_code as admin_co2_1_, admin_.create_date as create_d3_1_, admin_.email as email4_1_, admin_.fullName as fullname5_1_, admin_.last_login_time as last_log6_1_, admin_.phone_number as phone_nu7_1_ from admin admin_ inner join account admin_1_ on admin_.admin_id=admin_1_.account_id where admin_.admin_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Insert 1: insert into admin (admin_position, admin_code, create_date, email, fullName, last_login_time, phone_number, admin_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Update 1: update admin set admin_position=?, admin_code=?, create_date=?, email=?, fullName=?, last_login_time=?, phone_number=? where admin_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Delete 1: delete from admin where admin_id=?
2025-05-25 03:18:22 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ad1904f]
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : adPos
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : createDate
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : lastLoginTime
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:18:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:18:22 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:18:22 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Admin)
    - Returns
       - EntityReturnImpl(entity=model.Admin, querySpaceUid=<gen:0>, path=model.Admin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Admin)
          - SQL table alias mapping - admin0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:18:22 DEBUG EntityLoader - Static select for entity model.Admin [NONE]: select admin0_.admin_id as account_1_0_0_, admin0_1_.password as password2_0_0_, admin0_1_.role as role3_0_0_, admin0_1_.status as status4_0_0_, admin0_1_.username as username5_0_0_, admin0_.admin_position as admin_po1_1_0_, admin0_.admin_code as admin_co2_1_0_, admin0_.create_date as create_d3_1_0_, admin0_.email as email4_1_0_, admin0_.fullName as fullname5_1_0_, admin0_.last_login_time as last_log6_1_0_, admin0_.phone_number as phone_nu7_1_0_ from admin admin0_ inner join account admin0_1_ on admin0_.admin_id=admin0_1_.account_id where admin0_.admin_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister - Static SQL for entity: model.Account
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Snapshot select: select account_.account_id, account_.password as password2_0_, account_.role as role3_0_, account_.status as status4_0_, account_.username as username5_0_ from account account_ where account_.account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:18:22 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:18:22 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f438904]
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : academicTitle
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : address
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : dept
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : dob
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : gender
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : specialization
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : adPos
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : createDate
2025-05-25 03:18:22 DEBUG MetamodelGraphWalker - Visiting attribute path : lastLoginTime
2025-05-25 03:18:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:18:22 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:18:22 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:18:22 DEBUG EntityLoader - Static select for entity model.Account [NONE]: select account0_.account_id as account_1_0_0_, account0_.password as password2_0_0_, account0_.role as role3_0_0_, account0_.status as status4_0_0_, account0_.username as username5_0_0_, account0_1_.admin_position as admin_po1_1_0_, account0_1_.admin_code as admin_co2_1_0_, account0_1_.create_date as create_d3_1_0_, account0_1_.email as email4_1_0_, account0_1_.fullName as fullname5_1_0_, account0_1_.last_login_time as last_log6_1_0_, account0_1_.phone_number as phone_nu7_1_0_, account0_2_.academic_title as academic1_2_0_, account0_2_.address as address2_2_0_, account0_2_.teacher_code as teacher_3_2_0_, account0_2_.department as departme4_2_0_, account0_2_.dob as dob5_2_0_, account0_2_.email as email6_2_0_, account0_2_.full_name as full_nam7_2_0_, account0_2_.gender as gender8_2_0_, account0_2_.phone_number as phone_nu9_2_0_, account0_2_.specialization as special10_2_0_, case when account0_1_.admin_id is not null then 1 when account0_2_.account_id is not null then 2 when account0_.account_id is not null then 0 end as clazz_0_ from account account0_ left outer join admin account0_1_ on account0_.account_id=account0_1_.admin_id left outer join teacher account0_2_ on account0_.account_id=account0_2_.account_id where account0_.account_id=?
2025-05-25 03:18:22 INFO  access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4214ae8f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-05-25 03:18:22 DEBUG Table - No alter strings for table : account
2025-05-25 03:18:22 DEBUG Table - No alter strings for table : admin
2025-05-25 03:18:22 DEBUG Table - No alter strings for table : teacher
2025-05-25 03:18:22 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-05-25 03:18:22 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-05-25 03:18:22 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-25 03:18:22 INFO  JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-25 03:18:22 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:18:22 DEBUG QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@39dec536
2025-05-25 03:18:22 DEBUG NamedQueryRepository - Checking 0 named HQL queries
2025-05-25 03:18:22 DEBUG NamedQueryRepository - Checking 0 named SQL queries
2025-05-25 03:18:22 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2785db06
2025-05-25 03:18:22 DEBUG SessionFactoryRegistry - Registering SessionFactory: 9f22b12f-a1bd-4b25-bd7a-291077754799 (<unnamed>)
2025-05-25 03:18:22 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-05-25 03:18:22 DEBUG ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-25 03:18:22 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-05-25 03:18:22 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-25 03:18:22 DEBUG ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-25 03:18:22 DEBUG TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-25 03:18:22 DEBUG TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-25 03:18:22 DEBUG ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-25 03:18:22 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-25 03:18:22 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-05-25 03:18:22 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-25 03:18:22 DEBUG TransactionImpl - begin
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Teacher e where e.code = :fieldValue
2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Teacher'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:18:23 DEBUG FromElement - FromClause{level=1} : model.Teacher (e) -> teacher0_
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e -> teacher0_.account_id
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e -> teacher0_.account_id
2025-05-25 03:18:23 DEBUG DotNode - getDataType() : code -> org.hibernate.type.StringType@363042d7
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e.code -> teacher0_.teacher_code
2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:18:23 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count teacher0_.account_id ) ) ( FromClause{level=1} teacher teacher0_ ) ( where ( = ( teacher0_.teacher_code teacher0_.account_id code ) ? ) ) )
2025-05-25 03:18:23 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Teacher)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Teacher)
          | path: e.code
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Teacher)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: code
          \-ParameterNode

2025-05-25 03:18:23 DEBUG JoinProcessor - Using FROM fragment [teacher teacher0_]
2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teacher,account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'teacher0_.account_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[teacher0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teacher teacher0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=teacher,tableAlias=teacher0_,origin=null,columns={,className=model.Teacher}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'teacher0_.teacher_code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=e.code,tableAlias=teacher0_,className=model.Teacher,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'teacher0_.account_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
          |  \-[IDENT] IdentNode: 'code' {originalText=code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@363042d7}

2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Teacher e where e.code = :fieldValue
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - SQL: select count(teacher0_.account_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG SQL - select count(teacher0_.account_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Teacher001]
2025-05-25 03:18:23 DEBUG Loader - Result set row: 0
2025-05-25 03:18:23 DEBUG Loader - Result row: 
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Teacher e where e.email = :fieldValue
2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Teacher'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:18:23 DEBUG FromElement - FromClause{level=1} : model.Teacher (e) -> teacher0_
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e -> teacher0_.account_id
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e -> teacher0_.account_id
2025-05-25 03:18:23 DEBUG DotNode - getDataType() : email -> org.hibernate.type.StringType@363042d7
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e.email -> teacher0_.email
2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:18:23 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count teacher0_.account_id ) ) ( FromClause{level=1} teacher teacher0_ ) ( where ( = ( teacher0_.email teacher0_.account_id email ) ? ) ) )
2025-05-25 03:18:23 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Teacher)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Teacher)
          | path: e.email
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Teacher)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

2025-05-25 03:18:23 DEBUG JoinProcessor - Using FROM fragment [teacher teacher0_]
2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teacher,account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'teacher0_.account_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[teacher0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teacher teacher0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=teacher,tableAlias=teacher0_,origin=null,columns={,className=model.Teacher}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'teacher0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=e.email,tableAlias=teacher0_,className=model.Teacher,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'teacher0_.account_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@363042d7}

2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Teacher e where e.email = :fieldValue
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - SQL: select count(teacher0_.account_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG SQL - select count(teacher0_.account_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:18:23 DEBUG Loader - Result set row: 0
2025-05-25 03:18:23 DEBUG Loader - Result row: 
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Account e where e.username = :fieldValue
2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:18:23 DEBUG FromElement - FromClause{level=1} : model.Account (e) -> account0_
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e -> account0_.account_id
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e -> account0_.account_id
2025-05-25 03:18:23 DEBUG DotNode - getDataType() : username -> org.hibernate.type.StringType@363042d7
2025-05-25 03:18:23 DEBUG FromReferenceNode - Resolved : e.username -> account0_.username
2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:18:23 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count account0_.account_id ) ) ( FromClause{level=1} account account0_ ) ( where ( = ( account0_.username account0_.account_id username ) ? ) ) )
2025-05-25 03:18:23 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Account)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Account)
          | path: e.username
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Account)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

2025-05-25 03:18:23 DEBUG JoinProcessor - Using FROM fragment [account account0_]
2025-05-25 03:18:23 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'account0_.account_id' {alias=e, className=model.Account, tableAlias=account0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=account,tableAlias=account0_,origin=null,columns={,className=model.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=e.username,tableAlias=account0_,className=model.Account,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'account0_.account_id' {alias=e, className=model.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@363042d7}

2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Account e where e.username = :fieldValue
2025-05-25 03:18:23 DEBUG QueryTranslatorImpl - SQL: select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:18:23 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:18:23 DEBUG SQL - select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [minkoamo]
2025-05-25 03:18:23 DEBUG Loader - Result set row: 0
2025-05-25 03:18:23 DEBUG Loader - Result row: 
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG AbstractSaveEventListener - Generated identifier: b147fb5c-71f7-4619-b323-423cd356dc36, using strategy: org.hibernate.id.UUIDGenerator
2025-05-25 03:18:23 DEBUG TransactionImpl - committing
2025-05-25 03:18:23 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-05-25 03:18:23 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-05-25 03:18:23 DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2025-05-25 03:18:23 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-05-25 03:18:23 DEBUG EntityPrinter - Listing entities:
2025-05-25 03:18:23 DEBUG EntityPrinter - model.Teacher{role=TEACHER, address=null, code=Teacher001, gender=null, fullName=Nguyen Le Hoang, dept=null, academicTitle=null, password=Nguyenlehoang1@, phoneNumber=null, dob=null, specialization=null, id=b147fb5c-71f7-4619-b323-423cd356dc36, email=nguyenlehoang1@gentherm.com, status=ACTIVE, username=minkoamo}
2025-05-25 03:18:23 DEBUG SQL - select count(teacher0_.account_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Teacher001]
2025-05-25 03:18:23 DEBUG Loader - Result set row: 0
2025-05-25 03:18:23 DEBUG Loader - Result row: 
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG SQL - select count(teacher0_.account_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:18:23 DEBUG Loader - Result set row: 0
2025-05-25 03:18:23 DEBUG Loader - Result row: 
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG SQL - select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [minkoamo]
2025-05-25 03:18:23 DEBUG Loader - Result set row: 0
2025-05-25 03:18:23 DEBUG Loader - Result row: 
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG SQL - insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Nguyenlehoang1@]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [2] as [VARCHAR] - [TEACHER]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [3] as [VARCHAR] - [ACTIVE]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [4] as [VARCHAR] - [minkoamo]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [5] as [VARCHAR] - [b147fb5c-71f7-4619-b323-423cd356dc36]
2025-05-25 03:18:23 DEBUG SQL - insert into teacher (academic_title, address, teacher_code, department, dob, email, full_name, gender, phone_number, specialization, account_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [null]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [3] as [VARCHAR] - [Teacher001]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [4] as [VARCHAR] - [null]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [5] as [DATE] - [null]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [6] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [7] as [VARCHAR] - [Nguyen Le Hoang]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [10] as [VARCHAR] - [null]
2025-05-25 03:18:23 TRACE BasicBinder - binding parameter [11] as [VARCHAR] - [b147fb5c-71f7-4619-b323-423cd356dc36]
2025-05-25 03:18:23 DEBUG SqlExceptionHelper - could not execute statement [n/a]
java.sql.SQLException: Field 'teacher_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:986)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:18:23 WARN  SqlExceptionHelper - SQL Error: 1364, SQLState: HY000
2025-05-25 03:18:23 ERROR SqlExceptionHelper - Field 'teacher_id' doesn't have a default value
2025-05-25 03:18:23 INFO  AbstractBatchImpl - HHH000010: On release of batch it still contained JDBC statements
2025-05-25 03:18:23 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1411)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:18:23 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:18:23 DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2025-05-25 03:18:23 DEBUG SessionFactoryImpl - HHH000031: Closing
2025-05-25 03:18:23 DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1e3f86d5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@22587507]
2025-05-25 03:18:23 DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-05-25 03:18:23 INFO  pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/student_management]
2025-05-25 03:18:23 DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2025-05-25 03:23:49 DEBUG logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2025-05-25 03:23:49 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2025-05-25 03:23:49 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2025-05-25 03:23:49 DEBUG IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-05-25 03:23:49 INFO  Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-05-25 03:23:49 DEBUG Environment - HHH000206: hibernate.properties not found
2025-05-25 03:23:49 DEBUG LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2025-05-25 03:23:49 DEBUG LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2025-05-25 03:23:49 DEBUG JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2025-05-25 03:23:50 DEBUG Configuration - Building session factory using internal StandardServiceRegistryBuilder
2025-05-25 03:23:50 DEBUG ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2025-05-25 03:23:50 DEBUG Configuration - Building session factory using provided StandardServiceRegistry
2025-05-25 03:23:50 DEBUG RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2025-05-25 03:23:50 DEBUG RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2025-05-25 03:23:50 INFO  Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@55dfcc6
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@55dfcc6
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@55dfcc6
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7203c7ff
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2a76840c
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@623e088f
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67304a40
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@67304a40
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@67304a40
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5023bb8b
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5023bb8b
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5023bb8b
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5cde6747
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5cde6747
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5cde6747
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@2d96543c
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@2d96543c
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2d96543c
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b8d96d9
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6b8d96d9
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6b8d96d9
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fe1ce85
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5fe1ce85
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5fe1ce85
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52851b44
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52851b44
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52851b44
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@23aa363a
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@23aa363a
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1e8ce150
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1e8ce150
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@363042d7
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@363042d7
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@62e20a76
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@663411de
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@9ef8eb7
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@9ef8eb7
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@232a7d73
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@232a7d73
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@301ec38b
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@301ec38b
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@56113384
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@56113384
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@362045c0
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@362045c0
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@241e8ea6
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@241e8ea6
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3016fd5e
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3016fd5e
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@42463763
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@42463763
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@613a8ee1
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@613a8ee1
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@39a8312f
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@39a8312f
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@31000e60
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31000e60
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@fc258b1
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@fc258b1
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@fc258b1
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@57ea113a
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@50ecde95
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@50ecde95
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@50ecde95
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@d3957fe
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5e1fa5b1
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@4fce136b
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4fce136b
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3300f4fd
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3300f4fd
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7cbc3762
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7cbc3762
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@2f48b3d2
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f48b3d2
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4c550889
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4c550889
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@18bc345
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@340da44c
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@340da44c
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@340da44c
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@77a7cf58
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@77a7cf58
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@77a7cf58
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@293a5f75
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2dd29a59
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2d36e77e
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d36e77e
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2d36e77e
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@8c11eee
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@8c11eee
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@8c11eee
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5c08c46a
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4218500f
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6f2cfcc2
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6f2cfcc2
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4097cac
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3d9f6567
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3d9f6567
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4233e892
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4233e892
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@555cf22
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@319bc845
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@e84a8e1
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@aafcffa
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@aafcffa
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5f7b97da
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@18b0930f
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b7906b3
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a1dd365
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@395b56bb
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@256f8274
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68044f4
2025-05-25 03:23:50 DEBUG BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52d239ba
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-25 03:23:50 DEBUG DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-05-25 03:23:50 WARN  pooling - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2025-05-25 03:23:50 INFO  pooling - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/student_management]
2025-05-25 03:23:50 INFO  pooling - HHH10001001: Connection properties: {password=, user=root}
2025-05-25 03:23:50 INFO  pooling - HHH10001003: Autocommit mode: false
2025-05-25 03:23:50 DEBUG DriverManagerConnectionProviderImpl - Initializing Connection pool with 1 Connections
2025-05-25 03:23:50 INFO  DriverManagerConnectionProviderImpl - HHH000115: Hibernate connection pool size: 20 (min=1)
2025-05-25 03:23:50 DEBUG JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.5.5-10.4.32-MariaDB
      major : 5
      minor : 5
2025-05-25 03:23:50 DEBUG JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
2025-05-25 03:23:50 DEBUG JdbcEnvironmentInitiator - JDBC version : 4.2
2025-05-25 03:23:50 INFO  Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-05-25 03:23:50 DEBUG IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
2025-05-25 03:23:50 DEBUG IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2025-05-25 03:23:50 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c1dc8e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b273a59]
2025-05-25 03:23:50 DEBUG Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-05-25 03:23:50 DEBUG AnnotationBinder - Binding entity from annotated class: model.Account
2025-05-25 03:23:50 DEBUG AnnotationBinder - Ignoring implicit (absent) DiscriminatorColumn
2025-05-25 03:23:50 DEBUG EntityBinder - Import with entity name Account
2025-05-25 03:23:50 DEBUG EntityBinder - Bind entity model.Account on table account
2025-05-25 03:23:50 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=account_id, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:50 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:23:50 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:23:50 DEBUG PropertyBinder - MetadataSourceProcessor property id with lazy=false
2025-05-25 03:23:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:id]
2025-05-25 03:23:50 DEBUG SimpleValueBinder - building SimpleValue for id
2025-05-25 03:23:50 DEBUG PropertyBinder - Building property id
2025-05-25 03:23:50 DEBUG BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(account_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, uuid2, ...)
2025-05-25 03:23:50 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=password, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:50 DEBUG PropertyBinder - MetadataSourceProcessor property password with lazy=false
2025-05-25 03:23:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:password]
2025-05-25 03:23:50 DEBUG SimpleValueBinder - building SimpleValue for password
2025-05-25 03:23:50 DEBUG PropertyBinder - Building property password
2025-05-25 03:23:50 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=role, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:50 DEBUG PropertyBinder - MetadataSourceProcessor property role with lazy=false
2025-05-25 03:23:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:role]
2025-05-25 03:23:50 DEBUG SimpleValueBinder - building SimpleValue for role
2025-05-25 03:23:50 DEBUG PropertyBinder - Building property role
2025-05-25 03:23:50 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=status, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:50 DEBUG PropertyBinder - MetadataSourceProcessor property status with lazy=false
2025-05-25 03:23:50 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:status]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for status
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property status
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(account), mappingColumn=username, insertable=true, updatable=true, unique=true}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property username with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Account:username]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for username
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property username
2025-05-25 03:23:51 DEBUG AnnotationBinder - Binding entity from annotated class: model.Admin
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='admin_id', referencedColumn='null', mappedBy='null'}
2025-05-25 03:23:51 DEBUG EntityBinder - Import with entity name Admin
2025-05-25 03:23:51 DEBUG EntityBinder - Bind entity model.Admin on table admin
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=admin_position, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property adPos with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:adPos]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for adPos
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property adPos
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=admin_code, insertable=true, updatable=true, unique=true}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property code with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:code]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for code
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property code
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=create_date, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property createDate with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:createDate]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for createDate
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property createDate
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=email, insertable=true, updatable=true, unique=true}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:email]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for email
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property email
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=fullName, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:fullName]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for fullName
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property fullName
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=last_login_time, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property lastLoginTime with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:lastLoginTime]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for lastLoginTime
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property lastLoginTime
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(admin), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Admin:phoneNumber]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for phoneNumber
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property phoneNumber
2025-05-25 03:23:51 DEBUG AnnotationBinder - Binding entity from annotated class: model.Teacher
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='teacher_id', referencedColumn='null', mappedBy='null'}
2025-05-25 03:23:51 DEBUG EntityBinder - Import with entity name Teacher
2025-05-25 03:23:51 DEBUG EntityBinder - Bind entity model.Teacher on table teacher
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=academic_title, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property academicTitle with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:academicTitle]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for academicTitle
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property academicTitle
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=address, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property address with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:address]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for address
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property address
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=teacher_code, insertable=true, updatable=true, unique=true}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property code with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:code]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for code
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property code
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=department, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property dept with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:dept]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for dept
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property dept
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=dob, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property dob with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:dob]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for dob
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property dob
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=email, insertable=true, updatable=true, unique=true}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property email with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:email]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for email
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property email
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=full_name, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property fullName with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:fullName]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for fullName
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property fullName
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=gender, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property gender with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:gender]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for gender
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property gender
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=phone_number, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property phoneNumber with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:phoneNumber]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for phoneNumber
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property phoneNumber
2025-05-25 03:23:51 DEBUG Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teacher), mappingColumn=specialization, insertable=true, updatable=true, unique=false}
2025-05-25 03:23:51 DEBUG PropertyBinder - MetadataSourceProcessor property specialization with lazy=false
2025-05-25 03:23:51 DEBUG AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [model.Teacher:specialization]
2025-05-25 03:23:51 DEBUG SimpleValueBinder - building SimpleValue for specialization
2025-05-25 03:23:51 DEBUG PropertyBinder - Building property specialization
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for id
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for password
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for role
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for status
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for username
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for adPos
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for code
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for createDate
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for email
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for fullName
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for lastLoginTime
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for phoneNumber
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for academicTitle
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for address
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for code
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for dept
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for dob
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for email
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for fullName
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for gender
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for phoneNumber
2025-05-25 03:23:51 DEBUG SimpleValueBinder - Starting fillSimpleValue for specialization
2025-05-25 03:23:51 DEBUG PrimaryKey - Forcing column [account_id] to be non-null as it is part of the primary key for table [account]
2025-05-25 03:23:51 DEBUG PrimaryKey - Forcing column [admin_id] to be non-null as it is part of the primary key for table [admin]
2025-05-25 03:23:51 DEBUG PrimaryKey - Forcing column [teacher_id] to be non-null as it is part of the primary key for table [teacher]
2025-05-25 03:23:51 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:23:51 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:23:51 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:23:51 DEBUG InFlightMetadataCollectorImpl - Resolving reference to class: model.Account
2025-05-25 03:23:51 DEBUG SessionFactoryImpl - Building session factory
2025-05-25 03:23:51 DEBUG Settings - SessionFactory name : null
2025-05-25 03:23:51 DEBUG Settings - Automatic flush during beforeCompletion(): enabled
2025-05-25 03:23:51 DEBUG Settings - Automatic session close at end of transaction: disabled
2025-05-25 03:23:51 DEBUG Settings - Statistics: disabled
2025-05-25 03:23:51 DEBUG Settings - Deleted entity synthetic identifier rollback: disabled
2025-05-25 03:23:51 DEBUG Settings - Default entity-mode: pojo
2025-05-25 03:23:51 DEBUG Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2025-05-25 03:23:51 DEBUG Settings - Allow initialization of lazy state outside session : disabled
2025-05-25 03:23:51 DEBUG Settings - Using BatchFetchStyle : LEGACY
2025-05-25 03:23:51 DEBUG Settings - Default batch fetch size: -1
2025-05-25 03:23:51 DEBUG Settings - Maximum outer join fetch depth: 2
2025-05-25 03:23:51 DEBUG Settings - Default null ordering: NONE
2025-05-25 03:23:51 DEBUG Settings - Order SQL updates by primary key: disabled
2025-05-25 03:23:51 DEBUG Settings - Order SQL inserts for batching: disabled
2025-05-25 03:23:51 DEBUG Settings - multi-tenancy strategy : NONE
2025-05-25 03:23:51 DEBUG Settings - JTA Track by Thread: enabled
2025-05-25 03:23:51 DEBUG Settings - Query language substitutions: {}
2025-05-25 03:23:51 DEBUG Settings - Named query checking : enabled
2025-05-25 03:23:51 DEBUG Settings - Second-level cache: disabled
2025-05-25 03:23:51 DEBUG Settings - Second-level query cache: disabled
2025-05-25 03:23:51 DEBUG Settings - Second-level query cache factory: null
2025-05-25 03:23:51 DEBUG Settings - Second-level cache region prefix: null
2025-05-25 03:23:51 DEBUG Settings - Optimize second-level cache for minimal puts: disabled
2025-05-25 03:23:51 DEBUG Settings - Structured second-level cache entries: disabled
2025-05-25 03:23:51 DEBUG Settings - Second-level cache direct-reference entries: disabled
2025-05-25 03:23:51 DEBUG Settings - Automatic eviction of collection cache: disabled
2025-05-25 03:23:51 DEBUG Settings - JDBC batch size: 15
2025-05-25 03:23:51 DEBUG Settings - JDBC batch updates for versioned data: enabled
2025-05-25 03:23:51 DEBUG Settings - Scrollable result sets: enabled
2025-05-25 03:23:51 DEBUG Settings - Wrap result sets: disabled
2025-05-25 03:23:51 DEBUG Settings - JDBC3 getGeneratedKeys(): enabled
2025-05-25 03:23:51 DEBUG Settings - JDBC result set fetch size: null
2025-05-25 03:23:51 DEBUG Settings - Connection release mode: AFTER_TRANSACTION
2025-05-25 03:23:51 DEBUG Settings - Generate SQL with comments: disabled
2025-05-25 03:23:51 DEBUG Settings - JPA compliance - query : disabled
2025-05-25 03:23:51 DEBUG Settings - JPA compliance - closed-handling : disabled
2025-05-25 03:23:51 DEBUG Settings - JPA compliance - lists : disabled
2025-05-25 03:23:51 DEBUG Settings - JPA compliance - transactions : disabled
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:23:51 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:23:51 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:23:51 DEBUG SessionFactoryImpl - Session factory constructed with filter configurations : {}
2025-05-25 03:23:51 DEBUG SessionFactoryImpl - Instantiating session factory with properties: {java.specification.version=21, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.MySQL8Dialect, java.class.path=D:\CODE\Project\Student Management System\Student Management System\target\classes;C:\Users\minko\.m2\repository\org\hibernate\hibernate-core\5.6.15.Final\hibernate-core-5.6.15.Final.jar;C:\Users\minko\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\minko\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\minko\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\minko\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\minko\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\minko\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\minko\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\minko\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\minko\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\minko\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.3\jaxb-runtime-2.3.3.jar;C:\Users\minko\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\minko\.m2\repository\org\glassfish\jaxb\txw2\2.3.3\txw2-2.3.3.jar;C:\Users\minko\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.11\istack-commons-runtime-3.0.11.jar;C:\Users\minko\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\minko\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\minko\.m2\repository\com\mysql\mysql-connector-j\8.0.33\mysql-connector-j-8.0.33.jar;C:\Users\minko\.m2\repository\com\google\protobuf\protobuf-java\3.21.9\protobuf-java-3.21.9.jar;C:\Users\minko\.m2\repository\org\hibernate\validator\hibernate-validator\6.1.7.Final\hibernate-validator-6.1.7.Final.jar;C:\Users\minko\.m2\repository\jakarta\validation\jakarta.validation-api\2.0.2\jakarta.validation-api-2.0.2.jar;C:\Users\minko\.m2\repository\javax\el\javax.el-api\3.0.0\javax.el-api-3.0.0.jar;C:\Users\minko\.m2\repository\org\glassfish\javax.el\3.0.0\javax.el-3.0.0.jar;C:\Users\minko\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar, java.vm.vendor=Eclipse Adoptium, sun.arch.data.model=64, user.variant=, java.vendor.url=https://adoptium.net/, user.timezone=Asia/Saigon, java.vm.specification.version=21, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre\bin, sun.java.command=com.itdepartment.studentmanagermentsystem.nguyenlehoang.App, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\minko, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2025-01-21, java.home=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.6+7-LTS, user.name=minko, stdout.encoding=UTF-8, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/student_management, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Temurin-21.0.6+7, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://github.com/adoptium/adoptium-support/issues, java.io.tmpdir=C:\Users\minko\AppData\Local\Temp\, java.version=21.0.6, user.dir=D:\CODE\Project\Student Management System\Student Management System, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5c748168, native.encoding=Cp1252, java.library.path=C:\Users\minko\.p2\pool\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Users/minko/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin/server;C:/Users/minko/.p2/pool/plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_21.0.6.v20250130-0529/jre/bin;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files\dotnet\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files\Java\jdk-21\bin;C:\Program Files (x86)\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\Tools\Binn\;C:\Program Files\Microsoft SQL Server\160\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\minko\AppData\Local\Microsoft\WindowsApps;C:\Users\minko\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\minko\.dotnet\tools;C:\WINDOWS\system32;;., stderr.encoding=UTF-8, java.vendor=Eclipse Adoptium, java.vm.info=mixed mode, sharing, java.vm.version=21.0.6+7-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=65.0}
2025-05-25 03:23:51 INFO  Version - HV000001: Hibernate Validator 6.1.7.Final
2025-05-25 03:23:51 DEBUG ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-25 03:23:51 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-05-25 03:23:51 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-25 03:23:51 DEBUG ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-25 03:23:51 DEBUG TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-25 03:23:51 DEBUG TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-25 03:23:51 DEBUG ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-05-25 03:23:51 DEBUG ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-25 03:23:51 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-25 03:23:51 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-25 03:23:51 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-25 03:23:51 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-25 03:23:51 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:23:51 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:23:51 DEBUG JaccIntegrator - Skipping JACC integration as it was not enabled
2025-05-25 03:23:51 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Department
2025-05-25 03:23:51 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Gender
2025-05-25 03:23:51 DEBUG EnumType - Using NAMED-based conversion for Enum enums.AdminPosition
2025-05-25 03:23:51 DEBUG EnumType - Using NAMED-based conversion for Enum enums.Role
2025-05-25 03:23:51 DEBUG EnumType - Using NAMED-based conversion for Enum enums.AccountStatus
2025-05-25 03:23:51 DEBUG SessionFactoryImpl - Instantiated session factory
2025-05-25 03:23:51 DEBUG TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2c1dc8e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@22587507]
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Teacher] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Teacher
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Admin] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Admin
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - Not known whether passed class name [model.Account] is safe
2025-05-25 03:23:51 DEBUG ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Account
2025-05-25 03:23:51 DEBUG AbstractEntityPersister - Static SQL for entity: model.Teacher
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Snapshot select: select teacher_.teacher_id, teacher_1_.password as password2_0_, teacher_1_.role as role3_0_, teacher_1_.status as status4_0_, teacher_1_.username as username5_0_, teacher_.academic_title as academic1_2_, teacher_.address as address2_2_, teacher_.teacher_code as teacher_3_2_, teacher_.department as departme4_2_, teacher_.dob as dob5_2_, teacher_.email as email6_2_, teacher_.full_name as full_nam7_2_, teacher_.gender as gender8_2_, teacher_.phone_number as phone_nu9_2_, teacher_.specialization as special10_2_ from teacher teacher_ inner join account teacher_1_ on teacher_.teacher_id=teacher_1_.account_id where teacher_.teacher_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Insert 1: insert into teacher (academic_title, address, teacher_code, department, dob, email, full_name, gender, phone_number, specialization, teacher_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Update 1: update teacher set academic_title=?, address=?, teacher_code=?, department=?, dob=?, email=?, full_name=?, gender=?, phone_number=?, specialization=? where teacher_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Delete 1: delete from teacher where teacher_id=?
2025-05-25 03:23:51 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2abbd0d9]
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : academicTitle
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : address
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : dept
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : dob
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : gender
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : specialization
2025-05-25 03:23:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:23:51 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:23:51 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Teacher)
    - Returns
       - EntityReturnImpl(entity=model.Teacher, querySpaceUid=<gen:0>, path=model.Teacher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Teacher)
          - SQL table alias mapping - teacher0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:23:51 DEBUG EntityLoader - Static select for entity model.Teacher [NONE]: select teacher0_.teacher_id as account_1_0_0_, teacher0_1_.password as password2_0_0_, teacher0_1_.role as role3_0_0_, teacher0_1_.status as status4_0_0_, teacher0_1_.username as username5_0_0_, teacher0_.academic_title as academic1_2_0_, teacher0_.address as address2_2_0_, teacher0_.teacher_code as teacher_3_2_0_, teacher0_.department as departme4_2_0_, teacher0_.dob as dob5_2_0_, teacher0_.email as email6_2_0_, teacher0_.full_name as full_nam7_2_0_, teacher0_.gender as gender8_2_0_, teacher0_.phone_number as phone_nu9_2_0_, teacher0_.specialization as special10_2_0_ from teacher teacher0_ inner join account teacher0_1_ on teacher0_.teacher_id=teacher0_1_.account_id where teacher0_.teacher_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister - Static SQL for entity: model.Admin
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Snapshot select: select admin_.admin_id, admin_1_.password as password2_0_, admin_1_.role as role3_0_, admin_1_.status as status4_0_, admin_1_.username as username5_0_, admin_.admin_position as admin_po1_1_, admin_.admin_code as admin_co2_1_, admin_.create_date as create_d3_1_, admin_.email as email4_1_, admin_.fullName as fullname5_1_, admin_.last_login_time as last_log6_1_, admin_.phone_number as phone_nu7_1_ from admin admin_ inner join account admin_1_ on admin_.admin_id=admin_1_.account_id where admin_.admin_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Insert 1: insert into admin (admin_position, admin_code, create_date, email, fullName, last_login_time, phone_number, admin_id) values (?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Update 1: update admin set admin_position=?, admin_code=?, create_date=?, email=?, fullName=?, last_login_time=?, phone_number=? where admin_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Delete 1: delete from admin where admin_id=?
2025-05-25 03:23:51 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ad1904f]
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : adPos
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : createDate
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : lastLoginTime
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:23:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:23:51 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:23:51 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Admin)
    - Returns
       - EntityReturnImpl(entity=model.Admin, querySpaceUid=<gen:0>, path=model.Admin)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Admin)
          - SQL table alias mapping - admin0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:23:51 DEBUG EntityLoader - Static select for entity model.Admin [NONE]: select admin0_.admin_id as account_1_0_0_, admin0_1_.password as password2_0_0_, admin0_1_.role as role3_0_0_, admin0_1_.status as status4_0_0_, admin0_1_.username as username5_0_0_, admin0_.admin_position as admin_po1_1_0_, admin0_.admin_code as admin_co2_1_0_, admin0_.create_date as create_d3_1_0_, admin0_.email as email4_1_0_, admin0_.fullName as fullname5_1_0_, admin0_.last_login_time as last_log6_1_0_, admin0_.phone_number as phone_nu7_1_0_ from admin admin0_ inner join account admin0_1_ on admin0_.admin_id=admin0_1_.account_id where admin0_.admin_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister - Static SQL for entity: model.Account
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Version select: select account_id from account where account_id =?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Snapshot select: select account_.account_id, account_.password as password2_0_, account_.role as role3_0_, account_.status as status4_0_, account_.username as username5_0_ from account account_ where account_.account_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Insert 0: insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Update 0: update account set password=?, role=?, status=?, username=? where account_id=?
2025-05-25 03:23:51 DEBUG AbstractEntityPersister -  Delete 0: delete from account where account_id=?
2025-05-25 03:23:51 DEBUG QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f438904]
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : password
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : role
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : status
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : username
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : academicTitle
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : address
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : code
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : dept
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : dob
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : email
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : fullName
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : gender
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : phoneNumber
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : specialization
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : adPos
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : createDate
2025-05-25 03:23:51 DEBUG MetamodelGraphWalker - Visiting attribute path : lastLoginTime
2025-05-25 03:23:51 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
2025-05-25 03:23:51 DEBUG LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
2025-05-25 03:23:51 DEBUG LoadPlanTreePrinter - LoadPlan(entity=model.Account)
    - Returns
       - EntityReturnImpl(entity=model.Account, querySpaceUid=<gen:0>, path=model.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {account_1_0_0_}

2025-05-25 03:23:51 DEBUG EntityLoader - Static select for entity model.Account [NONE]: select account0_.account_id as account_1_0_0_, account0_.password as password2_0_0_, account0_.role as role3_0_0_, account0_.status as status4_0_0_, account0_.username as username5_0_0_, account0_1_.admin_position as admin_po1_1_0_, account0_1_.admin_code as admin_co2_1_0_, account0_1_.create_date as create_d3_1_0_, account0_1_.email as email4_1_0_, account0_1_.fullName as fullname5_1_0_, account0_1_.last_login_time as last_log6_1_0_, account0_1_.phone_number as phone_nu7_1_0_, account0_2_.academic_title as academic1_2_0_, account0_2_.address as address2_2_0_, account0_2_.teacher_code as teacher_3_2_0_, account0_2_.department as departme4_2_0_, account0_2_.dob as dob5_2_0_, account0_2_.email as email6_2_0_, account0_2_.full_name as full_nam7_2_0_, account0_2_.gender as gender8_2_0_, account0_2_.phone_number as phone_nu9_2_0_, account0_2_.specialization as special10_2_0_, case when account0_1_.admin_id is not null then 1 when account0_2_.teacher_id is not null then 2 when account0_.account_id is not null then 0 end as clazz_0_ from account account0_ left outer join admin account0_1_ on account0_.account_id=account0_1_.admin_id left outer join teacher account0_2_ on account0_.account_id=account0_2_.teacher_id where account0_.account_id=?
2025-05-25 03:23:51 INFO  access - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4214ae8f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2025-05-25 03:23:52 DEBUG Table - No alter strings for table : account
2025-05-25 03:23:52 DEBUG Table - No alter strings for table : admin
2025-05-25 03:23:52 DEBUG Table - No alter strings for table : teacher
2025-05-25 03:23:52 DEBUG JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
2025-05-25 03:23:52 DEBUG JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-05-25 03:23:52 DEBUG StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-25 03:23:52 INFO  JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-25 03:23:52 DEBUG SessionFactoryServiceRegistryImpl - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-25 03:23:52 DEBUG QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@39dec536
2025-05-25 03:23:52 DEBUG NamedQueryRepository - Checking 0 named HQL queries
2025-05-25 03:23:52 DEBUG NamedQueryRepository - Checking 0 named SQL queries
2025-05-25 03:23:52 DEBUG SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2785db06
2025-05-25 03:23:52 DEBUG SessionFactoryRegistry - Registering SessionFactory: 87b43022-67fd-4087-b537-1975acf13bc0 (<unnamed>)
2025-05-25 03:23:52 DEBUG SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
2025-05-25 03:23:52 DEBUG ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-25 03:23:52 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
2025-05-25 03:23:52 DEBUG ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-25 03:23:52 DEBUG ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-25 03:23:52 DEBUG TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-25 03:23:52 DEBUG TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-25 03:23:52 DEBUG ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
2025-05-25 03:23:52 DEBUG ValidatorFactoryConfigurationHelper - HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-25 03:23:52 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-25 03:23:52 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-25 03:23:52 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-25 03:23:52 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-25 03:23:52 DEBUG ValidatorFactoryConfigurationHelper - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-25 03:23:52 DEBUG StatisticsInitiator - Statistics initialized [enabled=false]
2025-05-25 03:23:52 DEBUG TransactionImpl - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-25 03:23:52 DEBUG TransactionImpl - begin
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Teacher e where e.email = :fieldValue
2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Teacher'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:23:52 DEBUG FromElement - FromClause{level=1} : model.Teacher (e) -> teacher0_
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:23:52 DEBUG DotNode - getDataType() : email -> org.hibernate.type.StringType@363042d7
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e.email -> teacher0_.email
2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:23:52 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count teacher0_.teacher_id ) ) ( FromClause{level=1} teacher teacher0_ ) ( where ( = ( teacher0_.email teacher0_.teacher_id email ) ? ) ) )
2025-05-25 03:23:52 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Teacher)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Teacher)
          | path: e.email
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Teacher)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

2025-05-25 03:23:52 DEBUG JoinProcessor - Using FROM fragment [teacher teacher0_]
2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teacher,account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[teacher0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teacher teacher0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=teacher,tableAlias=teacher0_,origin=null,columns={,className=model.Teacher}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'teacher0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=e.email,tableAlias=teacher0_,className=model.Teacher,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@363042d7}

2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Teacher e where e.email = :fieldValue
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - SQL: select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:23:52 DEBUG Loader - Result set row: 0
2025-05-25 03:23:52 DEBUG Loader - Result row: 
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Teacher e where e.code = :fieldValue
2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Teacher'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'code'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:23:52 DEBUG FromElement - FromClause{level=1} : model.Teacher (e) -> teacher0_
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e -> teacher0_.teacher_id
2025-05-25 03:23:52 DEBUG DotNode - getDataType() : code -> org.hibernate.type.StringType@363042d7
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e.code -> teacher0_.teacher_code
2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:23:52 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count teacher0_.teacher_id ) ) ( FromClause{level=1} teacher teacher0_ ) ( where ( = ( teacher0_.teacher_code teacher0_.teacher_id code ) ? ) ) )
2025-05-25 03:23:52 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Teacher)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Teacher)
          | path: e.code
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Teacher)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: code
          \-ParameterNode

2025-05-25 03:23:52 DEBUG JoinProcessor - Using FROM fragment [teacher teacher0_]
2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (teacher,account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[teacher0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'teacher teacher0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=teacher,tableAlias=teacher0_,origin=null,columns={,className=model.Teacher}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'teacher0_.teacher_code' {propertyName=code,dereferenceType=PRIMITIVE,getPropertyPath=code,path=e.code,tableAlias=teacher0_,className=model.Teacher,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'teacher0_.teacher_id' {alias=e, className=model.Teacher, tableAlias=teacher0_}
          |  \-[IDENT] IdentNode: 'code' {originalText=code}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@363042d7}

2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Teacher e where e.code = :fieldValue
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - SQL: select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Teacher001]
2025-05-25 03:23:52 DEBUG Loader - Result set row: 0
2025-05-25 03:23:52 DEBUG Loader - Result row: 
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - parse() - HQL: select count(e) from model.Account e where e.username = :fieldValue
2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Account'
    |  |     \-[ALIAS] Node: 'e'
    |  \-[SELECT] Node: 'select'
    |     \-[COUNT] Node: 'count'
    |        \-[IDENT] Node: 'e'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'e'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'fieldValue'

2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select << begin [level=1, statement=select]
2025-05-25 03:23:52 DEBUG FromElement - FromClause{level=1} : model.Account (e) -> account0_
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e -> account0_.account_id
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e -> account0_.account_id
2025-05-25 03:23:52 DEBUG DotNode - getDataType() : username -> org.hibernate.type.StringType@363042d7
2025-05-25 03:23:52 DEBUG FromReferenceNode - Resolved : e.username -> account0_.username
2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
2025-05-25 03:23:52 DEBUG HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} ( count account0_.account_id ) ) ( FromClause{level=1} account account0_ ) ( where ( = ( account0_.username account0_.account_id username ) ? ) ) )
2025-05-25 03:23:52 DEBUG JoinProcessor - Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    |  +-CountNode
    |  |  \-IdentNode
    |  |    persister: JoinedSubclassEntityPersister(model.Account)
    |  |    originalText: e
    |  \-SqlNode
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: JoinedSubclassEntityPersister(model.Account)
          | path: e.username
          |  +-IdentNode
          |  | persister: JoinedSubclassEntityPersister(model.Account)
          |  | originalText: e
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

2025-05-25 03:23:52 DEBUG JoinProcessor - Using FROM fragment [account account0_]
2025-05-25 03:23:52 DEBUG HqlSqlBaseWalker - select >> end [level=1, statement=select]
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (account)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'account0_.account_id' {alias=e, className=model.Account, tableAlias=account0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[e], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=e,role=null,tableName=account,tableAlias=account0_,origin=null,columns={,className=model.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'account0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=e.username,tableAlias=account0_,className=model.Account,classAlias=e}
          |  +-[ALIAS_REF] IdentNode: 'account0_.account_id' {alias=e, className=model.Account, tableAlias=account0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=fieldValue, expectedType=org.hibernate.type.StringType@363042d7}

2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - HQL: select count(e) from model.Account e where e.username = :fieldValue
2025-05-25 03:23:52 DEBUG QueryTranslatorImpl - SQL: select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:23:52 DEBUG ErrorTracker - throwQueryException() : no errors
2025-05-25 03:23:52 DEBUG SQL - select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [minkoamo]
2025-05-25 03:23:52 DEBUG Loader - Result set row: 0
2025-05-25 03:23:52 DEBUG Loader - Result row: 
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG AbstractSaveEventListener - Generated identifier: ccdf0f5c-d570-48ba-b587-17cefe8c16f2, using strategy: org.hibernate.id.UUIDGenerator
2025-05-25 03:23:52 DEBUG TransactionImpl - committing
2025-05-25 03:23:52 DEBUG AbstractFlushingEventListener - Processing flush-time cascades
2025-05-25 03:23:52 DEBUG AbstractFlushingEventListener - Dirty checking collections
2025-05-25 03:23:52 DEBUG AbstractFlushingEventListener - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2025-05-25 03:23:52 DEBUG AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-05-25 03:23:52 DEBUG EntityPrinter - Listing entities:
2025-05-25 03:23:52 DEBUG EntityPrinter - model.Teacher{role=TEACHER, address=null, code=Teacher001, gender=null, fullName=Nguyen Le Hoang, dept=null, academicTitle=null, password=Nguyenlehoang1@, phoneNumber=null, dob=null, specialization=null, id=ccdf0f5c-d570-48ba-b587-17cefe8c16f2, email=nguyenlehoang1@gentherm.com, status=ACTIVE, username=minkoamo}
2025-05-25 03:23:52 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.email=?
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:23:52 DEBUG Loader - Result set row: 0
2025-05-25 03:23:52 DEBUG Loader - Result row: 
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG SQL - select count(teacher0_.teacher_id) as col_0_0_ from teacher teacher0_ where teacher0_.teacher_code=?
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Teacher001]
2025-05-25 03:23:52 DEBUG Loader - Result set row: 0
2025-05-25 03:23:52 DEBUG Loader - Result row: 
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG SQL - select count(account0_.account_id) as col_0_0_ from account account0_ where account0_.username=?
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [minkoamo]
2025-05-25 03:23:52 DEBUG Loader - Result set row: 0
2025-05-25 03:23:52 DEBUG Loader - Result row: 
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG SQL - insert into account (password, role, status, username, account_id) values (?, ?, ?, ?, ?)
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [Nguyenlehoang1@]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [2] as [VARCHAR] - [TEACHER]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [3] as [VARCHAR] - [ACTIVE]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [4] as [VARCHAR] - [minkoamo]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [5] as [VARCHAR] - [ccdf0f5c-d570-48ba-b587-17cefe8c16f2]
2025-05-25 03:23:52 DEBUG SQL - insert into teacher (academic_title, address, teacher_code, department, dob, email, full_name, gender, phone_number, specialization, teacher_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [1] as [VARCHAR] - [null]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [2] as [VARCHAR] - [null]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [3] as [VARCHAR] - [Teacher001]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [4] as [VARCHAR] - [null]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [5] as [DATE] - [null]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [6] as [VARCHAR] - [nguyenlehoang1@gentherm.com]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [7] as [VARCHAR] - [Nguyen Le Hoang]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [8] as [VARCHAR] - [null]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [9] as [VARCHAR] - [null]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [10] as [VARCHAR] - [null]
2025-05-25 03:23:52 TRACE BasicBinder - binding parameter [11] as [VARCHAR] - [ccdf0f5c-d570-48ba-b587-17cefe8c16f2]
2025-05-25 03:23:52 DEBUG SqlExceptionHelper - could not execute statement [n/a]
java.sql.SQLException: Field 'account_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:986)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:23:52 WARN  SqlExceptionHelper - SQL Error: 1364, SQLState: HY000
2025-05-25 03:23:52 ERROR SqlExceptionHelper - Field 'account_id' doesn't have a default value
2025-05-25 03:23:52 INFO  AbstractBatchImpl - HHH000010: On release of batch it still contained JDBC statements
2025-05-25 03:23:52 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:428)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1411)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:23:52 DEBUG JdbcResourceLocalTransactionCoordinatorImpl - JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at com.itdepartment.studentmanagermentsystem.nguyenlehoang.App.main(App.java:42)
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
2025-05-25 03:23:52 DEBUG JdbcCoordinatorImpl - HHH000420: Closing un-released batch
2025-05-25 03:23:52 DEBUG SessionFactoryImpl - HHH000031: Closing
2025-05-25 03:23:52 DEBUG TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1e3f86d5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@22587507]
2025-05-25 03:23:52 DEBUG AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2025-05-25 03:23:52 INFO  pooling - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/student_management]
2025-05-25 03:23:52 DEBUG BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
